apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-apps-frontend
  namespace: demo-apps
  labels:
    app.kubernetes.io/name: demo-apps
    app.kubernetes.io/component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-apps
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-apps
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: demo-apps
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
      - name: frontend
        image: frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: REACT_APP_API_PROCESSING_URL
          valueFrom:
            configMapKeyRef:
              name: demo-apps-config
              key: react-app-api-processing-url
        - name: REACT_APP_API_STATUS_URL
          valueFrom:
            configMapKeyRef:
              name: demo-apps-config
              key: react-app-api-status-url
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: demo-apps-config
              key: environment
        - name: REGION
          valueFrom:
            configMapKeyRef:
              name: demo-apps-config
              key: region
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache/nginx
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
